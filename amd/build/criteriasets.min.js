define("assignfeedback_structured/criteriasets",["exports","core/ajax","./csmodal","core/notification","core/str","core/templates"],(function(_exports,_ajax,_csmodal,_notification,_str,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Launches a modal dialogue that enables users to manage their criteria sets for the structured feedback plugin.
   *
   * See template: assignfeedback_structured/criteriasets
   *
   * @module     assignfeedback_structured/criteriasets
   * @class      criteriasets
   * @copyright  2017 Lancaster University {@link http://www.lancaster.ac.uk/}
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @author     Tony Butler <a.butler4@lancaster.ac.uk>
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.modalActive=_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_csmodal=_interopRequireDefault(_csmodal),_notification=_interopRequireDefault(_notification),_templates=_interopRequireDefault(_templates);_exports.init=async(contextId,manage,canPublish,ownedSets,sharedSets)=>{const strings=await(0,_str.getStrings)([{key:"criteriasetssaved",component:"assignfeedback_structured"},{key:"criteriasetsmanage",component:"assignfeedback_structured"}]);let title=strings[0],button=document.querySelector("#id_assignfeedback_structured_critset");manage&&(title=strings[1],button=document.querySelector("#id_assignfeedback_structured_critsetsmanage")),button.addEventListener("click",(async()=>{const templateContext={contextId:contextId,manage:manage,canPublish:canPublish,ownedSets:ownedSets,sharedSets:sharedSets},modal=await _csmodal.default.create({title:title,templateContext:templateContext});(await modal.getFooter()).find(modal.getActionSelector("refresh")).on("click",(async()=>{await refreshSets(modal,contextId,manage,canPublish)})),await refreshSets(modal,contextId,manage,canPublish),manage||await modalActive(button)}))};const refreshSets=async(modal,contextId,manage,canPublish)=>{const modalBody=await modal.getBody(),modalFooter=await modal.getFooter(),refreshButton=modalFooter.find(modal.getActionSelector("refresh")),buttonWidth=refreshButton.width(),spinner=modalFooter.find(".loading-icon");refreshButton.hide(),spinner.css({marginLeft:buttonWidth/2+"px",marginRight:buttonWidth/2+"px"}),spinner.show();const request=_ajax.default.call([{methodname:"assignfeedback_structured_get_criteriasets",args:{contextid:contextId,includeshared:!manage}}]),response=await request[0],context={contextId:contextId,manage:manage,canPublish:canPublish,ownedSets:response.ownedsets,sharedSets:response.sharedsets},{html:html,js:js}=await _templates.default.renderForPromise("assignfeedback_structured/criteriasets_body",context);_templates.default.replaceNodeContents(modalBody,html,js),modalBody.find(".loading-icon").hide(),spinner.hide(),refreshButton.show();const showShared=modalFooter.find(modal.getActionSelector("showshared")),sharedSets=modalBody.find(".criteriasets-shared");toggleShared(showShared,sharedSets),showShared.on("click",(()=>{toggleShared(showShared,sharedSets)}));modalBody.find('[data-bs-toggle="collapse"][href^="#criteria-data-"]').on("click",(async function(){if(!this.classList.contains("collapsed")){const set=this.parentNode.parentNode,spinner=this.parentNode.querySelector(".loading-icon");spinner.style.display="initial",await getCriteria(set),spinner.style.display="none"}})),modalBody.find('[name="criteriaset-newname"]').hide();modalBody.find('[data-set-action="editname"]').on("click keydown",(function(e){if("click"===e.type||32===e.keyCode){e.preventDefault();const setName=this.parentNode.parentNode.dataset.criteriasetName,nameElement=this.parentNode.querySelector('[data-bs-toggle="collapse"]'),nameInput=this.parentNode.querySelector('[name="criteriaset-newname"]');this.style.display="none",nameElement.style.display="none",nameInput.value=setName,nameInput.style.display="initial",nameInput.focus(),nameInput.select(),["blur","keydown"].forEach((type=>{nameInput.addEventListener(type,nameChangeHandler)}))}}));modalBody.find('input[data-set-action="shared"]').on("change",(async function(){const spinner=this.parentNode.parentNode.querySelector(".loading-icon"),set=this.parentNode.parentNode.parentNode,updates={shared:this.checked};spinner.style.display="initial",await updateCriteriaSet(set,updates),spinner.style.display="none"}));modalBody.find('[data-set-action="delete"]').on("click",(async function(){const set=this.parentNode.parentNode,contextId=set.parentNode.parentNode.dataset.context,setId=set.dataset.criteriasetId,setName=set.dataset.criteriasetName,spinner=this.parentNode.querySelector(".loading-icon"),strings=await(0,_str.getStrings)([{key:"criteriasetdelete",component:"assignfeedback_structured"},{key:"criteriasetconfirmdelete",component:"assignfeedback_structured",param:setName},{key:"yes"},{key:"no"},{key:"error"},{key:"criteriasetnotdeleted",component:"assignfeedback_structured",param:setName},{key:"continue"}]);await _notification.default.confirm(strings[0],strings[1],strings[2],strings[3],(async()=>{spinner.style.display="initial";const request=_ajax.default.call([{methodname:"assignfeedback_structured_delete_criteriaset",args:{contextid:contextId,criteriasetid:setId}}]);!0===await request[0]?set.style.display="none":await _notification.default.alert(strings[4],strings[5],strings[6]),spinner.style.display="none"}))}));modalBody.find('[data-set-action="use"]').on("click",(async function(){const set=this.parentNode.parentNode,spinner=this.parentNode.querySelector(".loading-icon");spinner.style.display="initial";let use=!0;for(const name of document.querySelectorAll('input[id^="id_assignfeedback_structured_critname"]'))if(name.value.trim()){use=!1;const strings=await(0,_str.getStrings)([{key:"criteriasetuse",component:"assignfeedback_structured"},{key:"criteriasetconfirmuse",component:"assignfeedback_structured"},{key:"yes"},{key:"no"}]);await _notification.default.confirm(strings[0],strings[1],strings[2],strings[3],(async()=>{await useSet(set,spinner),modal.destroy()}),(()=>{spinner.style.display="none"}));break}!0===use&&(await useSet(set,spinner),modal.destroy())}))},modalActive=async button=>{const spinner=button.parentNode.querySelector(".loading-icon");if(spinner)spinner.style.display="initial";else{const{html:html,js:js}=await _templates.default.renderForPromise("core/loading",{});_templates.default.appendNodeContents(button.parentNode,html,js)}button.addEventListener("focus",(()=>{const spinner=button.parentNode.querySelector(".loading-icon");spinner&&(spinner.style.display="none")}))};_exports.modalActive=modalActive;const toggleShared=(showShared,sharedSets)=>{showShared.prop("checked")?sharedSets.show():sharedSets.hide()},getCriteria=async set=>{const contextId=set.parentNode.parentNode.dataset.context,setId=set.dataset.criteriasetId,criteriaNode=set.querySelector(".criteria-data");if(!criteriaNode.querySelectorAll(".assignfeedback_structured_criteria").length){const request=_ajax.default.call([{methodname:"assignfeedback_structured_get_criteria",args:{contextid:contextId,criteriasetid:setId}}]),context={criteriaData:await request[0]},{html:html,js:js}=await _templates.default.renderForPromise("assignfeedback_structured/criteria",context);criteriaNode.querySelectorAll(".assignfeedback_structured_criteria").length||_templates.default.appendNodeContents(criteriaNode,html,js)}},nameChangeHandler=async function(){const nameElement=this.parentNode.querySelector('[data-bs-toggle="collapse"]'),editButton=this.parentNode.querySelector('[data-set-action="editname"]'),set=this.parentNode.parentNode,setName=set.dataset.criteriasetName,rawName=this.value.trim(),spinner=this.parentNode.querySelector(".loading-icon");if("keydown"!==event.type||13!==event.keyCode&&27!==event.keyCode||this.removeEventListener("blur",nameChangeHandler),27===event.keyCode)event.stopPropagation(),this.style.display="none",nameElement.style.display="initial",editButton.style.display="initial";else if("blur"===event.type||13===event.keyCode){const newName=rawName.charAt(0).toUpperCase()+rawName.slice(1);if(this.value=newName,newName&&newName!==setName){const updates={name:newName};spinner.style.display="initial";const response=await updateCriteriaSet(set,updates);!0===response.success?(this.style.display="none",set.dataset.criteriasetName=newName,nameElement.text=newName,nameElement.style.display="initial",editButton.style.display="initial"):(await _notification.default.alert(response.title,response.body,response.label),this.style.display="none",nameElement.style.display="initial",editButton.style.display="initial"),spinner.style.display="none"}else this.style.display="none",nameElement.style.display="initial",editButton.style.display="initial"}},updateCriteriaSet=async(set,updates)=>{const contextId=set.parentNode.parentNode.dataset.context,setId=set.dataset.criteriasetId,request=_ajax.default.call([{methodname:"assignfeedback_structured_update_criteriaset",args:{contextid:contextId,criteriasetid:setId,updates:updates}}]);return await request[0]},useSet=async(set,spinner)=>{const criteriaNode=set.querySelector(".criteria-data");criteriaNode.querySelectorAll(".assignfeedback_structured_criteria").length||await getCriteria(set),await processCriteriaData(criteriaNode),spinner.style.display="none"},processCriteriaData=async criteriaNode=>{const criteriaList=criteriaNode.querySelector(".criteria-list").children,configData=[];for(const criterion of criteriaList){const name=criterion.dataset.criterionName,desc=criterion.dataset.criterionDesc;configData.push({name:name,desc:desc})}const repeats=document.querySelector('[name="assignfeedback_structured_repeats"]'),critFields=parseInt(repeats.value);if(configData.length>critFields){const newIndexes=[];for(let i=critFields;i<configData.length;i++)newIndexes.push({nodeIndex:i,critIndex:i+1});const context={lastNodeIndex:critFields-1,lastCritIndex:critFields,newIndexes:newIndexes},lastFieldId="id_assignfeedback_structured_critdesc_"+(critFields-1),lastNode=document.querySelector("#fitem_"+lastFieldId),templateName="assignfeedback_structured/criterianodes",{html:html,js:js}=await _templates.default.renderForPromise(templateName,context);_templates.default.replaceNode(lastNode,html,js),await populateFields(configData),repeats.value=configData.length}else{for(let j=0;j<critFields;j++)document.querySelector("#id_assignfeedback_structured_critname_"+j).value="",document.querySelector("#id_assignfeedback_structured_critdesc_"+j).value="";await populateFields(configData),document.querySelector("#id_assignfeedback_structured_critfieldsadd").disabled=!0}configData.length>=critFields&&(document.querySelector("#id_assignfeedback_structured_critfieldsadd").disabled=!1),document.querySelector("#id_assignfeedback_structured_critsetsave").disabled=!1},populateFields=async configData=>{configData.forEach(((criterion,index)=>{Object.keys(criterion).forEach((fieldName=>{const field="#id_assignfeedback_structured_crit"+fieldName+"_"+index;document.querySelector(field).value=criterion[fieldName]}))}))}}));

//# sourceMappingURL=criteriasets.min.js.map