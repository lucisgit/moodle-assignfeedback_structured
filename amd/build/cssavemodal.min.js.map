{"version":3,"file":"cssavemodal.min.js","sources":["../src/cssavemodal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A Javascript module to handle the criteria set 'save' modal for the structured feedback plugin.\n *\n * @module     assignfeedback_structured/cssavemodal\n * @copyright  2024 Lancaster University {@link http://www.lancaster.ac.uk/}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     Tony Butler <a.butler4@lancaster.ac.uk>\n */\n\nimport CustomEvents from 'core/custom_interaction_events';\nimport Modal from 'core/modal';\nimport {saveSet} from './criteriasetsave';\n\n/**\n * @class\n * @extends module:core/modal\n */\nexport default class CSSaveModal extends Modal {\n    static TYPE = 'assignfeedback_structured/cssavemodal';\n    static TEMPLATE = 'core/modal_save_cancel';\n\n    /**\n     * Configure the criteria set 'save' modal.\n     *\n     * @param {Object} modalConfig The modal configuration.\n     */\n    configure(modalConfig) {\n        super.configure({\n            ...modalConfig,\n            show: true,\n            removeOnClose: true,\n        });\n    }\n\n    /**\n     * Handle click events within the criteria sets 'save' modal.\n     */\n    registerEventListeners() {\n        // Call the parent registration.\n        super.registerEventListeners();\n\n        // Register to close on cancel.\n        this.registerCloseOnCancel();\n\n        // Save criteria set on save.\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('save'), async(e) => {\n            e.preventDefault();\n            await saveSet(this);\n        });\n\n        // Hide 'loading' spinner on cancel.\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('cancel'), async() => {\n            const spinner = document.querySelector('#id_assignfeedback_structured_critsetsave')\n                .parentNode.querySelector('.loading-icon');\n            if (spinner) {\n                spinner.style.display = 'none';\n            }\n        });\n    }\n}\n"],"names":["CSSaveModal","Modal","configure","modalConfig","show","removeOnClose","registerEventListeners","registerCloseOnCancel","getModal","on","CustomEvents","events","activate","this","getActionSelector","async","e","preventDefault","spinner","document","querySelector","parentNode","style","display"],"mappings":"ooBAgCqBA,oBAAoBC,eASrCC,UAAUC,mBACAD,UAAU,IACTC,YACHC,MAAM,EACNC,eAAe,IAOvBC,+BAEUA,8BAGDC,6BAGAC,WAAWC,GAAGC,mCAAaC,OAAOC,SAAUC,KAAKC,kBAAkB,SAASC,MAAAA,IAC7EC,EAAEC,uBACI,4BAAQJ,cAIbL,WAAWC,GAAGC,mCAAaC,OAAOC,SAAUC,KAAKC,kBAAkB,WAAWC,gBACzEG,QAAUC,SAASC,cAAc,6CAClCC,WAAWD,cAAc,iBAC1BF,UACAA,QAAQI,MAAMC,QAAU,gEAtCnBvB,mBACH,yDADGA,uBAEC"}