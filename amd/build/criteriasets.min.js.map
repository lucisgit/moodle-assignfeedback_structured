{"version":3,"file":"criteriasets.min.js","sources":["../src/criteriasets.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Launches a modal dialogue that enables users to manage their criteria sets for the structured feedback plugin.\n *\n * See template: assignfeedback_structured/criteriasets\n *               assignfeedback_structured/criteriasets_footer\n *\n * @module     assignfeedback_structured/criteriasets\n * @class      criteriasets\n * @copyright  2017 Lancaster University {@link http://www.lancaster.ac.uk/}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     Tony Butler <a.butler4@lancaster.ac.uk>\n */\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events'\n    ],\n    function($, ajax, notification, str, templates, ModalFactory, ModalEvents) {\n        var criteriaSets = {\n            /**\n             * Init function.\n             *\n             * @param {number} contextId The context ID of the current assignment instance.\n             * @param {boolean} manage Whether a full management interface is required (otherwise it's read only).\n             * @param {boolean} canPublish Whether the current user can publish criteria sets.\n             * @param {object[]} ownedSets An array of data objects for all saved criteria sets owned by the current user.\n             * @param {object[]} sharedSets An array of data objects for any other available criteria sets.\n             */\n            init: function(contextId, manage, canPublish, ownedSets, sharedSets) {\n                str.get_strings([\n                    {key: 'criteriasetssaved', component: 'assignfeedback_structured'},\n                    {key: 'criteriasetsmanage', component: 'assignfeedback_structured'}\n                ]).done(function(s) {\n                    var context = {\n                        contextId: contextId,\n                        manage: manage,\n                        canPublish: canPublish,\n                        ownedSets: ownedSets,\n                        sharedSets: sharedSets\n                    };\n                    var footerContext = {\n                        manage: manage\n                    };\n                    var title = s[0],\n                        trigger = $('#id_assignfeedback_structured_critset');\n                    if (manage) {\n                        title = s[1];\n                        trigger = $('#id_assignfeedback_structured_critsetsmanage');\n                    }\n                    templates.render('assignfeedback_structured/criteriasets_footer', footerContext).done(function(footer) {\n                        ModalFactory.create({\n                            title: title,\n                            body: templates.render('assignfeedback_structured/criteriasets', context),\n                            footer: footer,\n                            large: false\n                        }, trigger).done(function(modal) {\n                            var refreshButton = modal.getFooter().find('[data-action=\"refresh\"]');\n                            refreshButton.on('click', function() {\n                                refreshSets(modal, contextId, manage, canPublish);\n                            });\n                            // Refresh automatically when showing the modal.\n                            modal.getRoot().on(ModalEvents.shown, function() {\n                                refreshSets(modal, contextId, manage, canPublish);\n                            });\n                        }).fail(notification.exception);\n                    }).fail(notification.exception);\n                });\n\n                // Add a hidden spinner after the 'Use a saved criteria set' button.\n                if (!manage) {\n                    var setButton = $('#id_assignfeedback_structured_critset');\n                    templates.render('core/loading', {}).done(function(html, js) {\n                        templates.appendNodeContents(setButton.parent(), html, js);\n                        setButton.siblings('.loading-icon').hide();\n                    }).fail(notification.exception);\n                }\n            }\n        };\n\n        /**\n         * Function to call a web service method via AJAX to update the list of criteria sets.\n         *\n         * @param {object} modal The modal dialogue to be refreshed.\n         * @param {number} contextId The context ID of the current assignment instance.\n         * @param {boolean} manage Whether the modal provides a management interface.\n         * @param {boolean} canPublish Whether the current user can publish criteria sets.\n         */\n        function refreshSets(modal, contextId, manage, canPublish) {\n            var modalBody = modal.getBody(),\n                modalFooter = modal.getFooter(),\n                refreshButton = modalFooter.find('[data-action=\"refresh\"]'),\n                buttonWidth = refreshButton.width(),\n                spinner = modalFooter.find('.loading-icon');\n\n            refreshButton.hide();\n            spinner.css({marginLeft: buttonWidth / 2 + 'px', marginRight: buttonWidth / 2 + 'px'});\n            spinner.show();\n\n            var request = ajax.call([{\n                methodname: 'assignfeedback_structured_get_criteriasets',\n                args: {\n                    contextid: contextId,\n                    includeshared: !manage\n                }\n            }]);\n\n            request[0].done(function(response) {\n                var context = {\n                    contextId: contextId,\n                    manage: manage,\n                    canPublish: canPublish,\n                    ownedSets: response.ownedsets,\n                    sharedSets: response.sharedsets\n                };\n                templates.render('assignfeedback_structured/criteriasets', context).done(function(html, js) {\n                    templates.replaceNodeContents(modalBody, html, js);\n                    spinner.hide();\n                    refreshButton.show();\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n        }\n\n        return criteriaSets;\n    }\n);\n"],"names":["define","$","ajax","notification","str","templates","ModalFactory","ModalEvents","refreshSets","modal","contextId","manage","canPublish","modalBody","getBody","modalFooter","getFooter","refreshButton","find","buttonWidth","width","spinner","hide","css","marginLeft","marginRight","show","call","methodname","args","contextid","includeshared","done","response","context","ownedSets","ownedsets","sharedSets","sharedsets","render","html","js","replaceNodeContents","fail","exception","init","get_strings","key","component","s","footerContext","title","trigger","footer","create","body","large","on","getRoot","shown","setButton","appendNodeContents","parent","siblings"],"mappings":";;;;;;;;;;;;AA2BAA,gDACI,CACI,SACA,YACA,oBACA,WACA,iBACA,qBACA,sBAEJ,SAASC,EAAGC,KAAMC,aAAcC,IAAKC,UAAWC,aAAcC,sBAsEjDC,YAAYC,MAAOC,UAAWC,OAAQC,gBACvCC,UAAYJ,MAAMK,UAClBC,YAAcN,MAAMO,YACpBC,cAAgBF,YAAYG,KAAK,2BACjCC,YAAcF,cAAcG,QAC5BC,QAAUN,YAAYG,KAAK,iBAE/BD,cAAcK,OACdD,QAAQE,IAAI,CAACC,WAAYL,YAAc,EAAI,KAAMM,YAAaN,YAAc,EAAI,OAChFE,QAAQK,OAEMxB,KAAKyB,KAAK,CAAC,CACrBC,WAAY,6CACZC,KAAM,CACFC,UAAWpB,UACXqB,eAAgBpB,WAIhB,GAAGqB,MAAK,SAASC,cACjBC,QAAU,CACVxB,UAAWA,UACXC,OAAQA,OACRC,WAAYA,WACZuB,UAAWF,SAASG,UACpBC,WAAYJ,SAASK,YAEzBjC,UAAUkC,OAAO,yCAA0CL,SAASF,MAAK,SAASQ,KAAMC,IACpFpC,UAAUqC,oBAAoB7B,UAAW2B,KAAMC,IAC/CpB,QAAQC,OACRL,cAAcS,UACfiB,KAAKxC,aAAayC,cACtBD,KAAKxC,aAAayC,iBArGN,CAUfC,KAAM,SAASnC,UAAWC,OAAQC,WAAYuB,UAAWE,eACrDjC,IAAI0C,YAAY,CACZ,CAACC,IAAK,oBAAqBC,UAAW,6BACtC,CAACD,IAAK,qBAAsBC,UAAW,+BACxChB,MAAK,SAASiB,OACTf,QAAU,CACVxB,UAAWA,UACXC,OAAQA,OACRC,WAAYA,WACZuB,UAAWA,UACXE,WAAYA,YAEZa,cAAgB,CAChBvC,OAAQA,QAERwC,MAAQF,EAAE,GACVG,QAAUnD,EAAE,yCACZU,SACAwC,MAAQF,EAAE,GACVG,QAAUnD,EAAE,iDAEhBI,UAAUkC,OAAO,gDAAiDW,eAAelB,MAAK,SAASqB,QAC3F/C,aAAagD,OAAO,CAChBH,MAAOA,MACPI,KAAMlD,UAAUkC,OAAO,yCAA0CL,SACjEmB,OAAQA,OACRG,OAAO,GACRJ,SAASpB,MAAK,SAASvB,OACFA,MAAMO,YAAYE,KAAK,2BAC7BuC,GAAG,SAAS,WACtBjD,YAAYC,MAAOC,UAAWC,OAAQC,eAG1CH,MAAMiD,UAAUD,GAAGlD,YAAYoD,OAAO,WAClCnD,YAAYC,MAAOC,UAAWC,OAAQC,kBAE3C+B,KAAKxC,aAAayC,cACtBD,KAAKxC,aAAayC,eAIpBjC,OAAQ,KACLiD,UAAY3D,EAAE,yCAClBI,UAAUkC,OAAO,eAAgB,IAAIP,MAAK,SAASQ,KAAMC,IACrDpC,UAAUwD,mBAAmBD,UAAUE,SAAUtB,KAAMC,IACvDmB,UAAUG,SAAS,iBAAiBzC,UACrCqB,KAAKxC,aAAayC"}